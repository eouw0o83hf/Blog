#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18046
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CodeExamples
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="eouw0o83hf")]
	public partial class ExampleDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCar(Car instance);
    partial void UpdateCar(Car instance);
    partial void DeleteCar(Car instance);
    #endregion
		
		public ExampleDataContext() : 
				base(global::CodeExamples.Properties.Settings.Default.eouw0o83hfConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ExampleDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ExampleDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ExampleDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ExampleDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Car> Cars
		{
			get
			{
				return this.GetTable<Car>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="example.Cars")]
	public partial class Car : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _Vin;
		
		private string _LicensePlate;
		
		private string _Make;
		
		private string _Model;
		
		private int _Year;
		
		private int _NumberOfDoors;
		
		private int _Odometer;
		
		private int _MaxSpeed;
		
		private bool _HasAllWheelDrive;
		
		private bool _HasPowerSteering;
		
		private bool _HasAirConditioning;
		
		private System.Nullable<int> _NumberOfAxles;
		
		private System.Nullable<int> _SpeedCount;
		
		private System.Nullable<int> _HighwayMilesPerGallon;
		
		private System.Nullable<int> _CityMilesPerGallon;
		
		private System.Nullable<bool> _HasSunRoof;
		
		private System.Nullable<bool> _HasDoubleSunRoof;
		
		private System.Nullable<bool> _HasPowerWindows;
		
		private System.Nullable<bool> _HasAutomaticTransmission;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnVinChanging(string value);
    partial void OnVinChanged();
    partial void OnLicensePlateChanging(string value);
    partial void OnLicensePlateChanged();
    partial void OnMakeChanging(string value);
    partial void OnMakeChanged();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnYearChanging(int value);
    partial void OnYearChanged();
    partial void OnNumberOfDoorsChanging(int value);
    partial void OnNumberOfDoorsChanged();
    partial void OnOdometerChanging(int value);
    partial void OnOdometerChanged();
    partial void OnMaxSpeedChanging(int value);
    partial void OnMaxSpeedChanged();
    partial void OnHasAllWheelDriveChanging(bool value);
    partial void OnHasAllWheelDriveChanged();
    partial void OnHasPowerSteeringChanging(bool value);
    partial void OnHasPowerSteeringChanged();
    partial void OnHasAirConditioningChanging(bool value);
    partial void OnHasAirConditioningChanged();
    partial void OnNumberOfAxlesChanging(System.Nullable<int> value);
    partial void OnNumberOfAxlesChanged();
    partial void OnSpeedCountChanging(System.Nullable<int> value);
    partial void OnSpeedCountChanged();
    partial void OnHighwayMilesPerGallonChanging(System.Nullable<int> value);
    partial void OnHighwayMilesPerGallonChanged();
    partial void OnCityMilesPerGallonChanging(System.Nullable<int> value);
    partial void OnCityMilesPerGallonChanged();
    partial void OnHasSunRoofChanging(System.Nullable<bool> value);
    partial void OnHasSunRoofChanged();
    partial void OnHasDoubleSunRoofChanging(System.Nullable<bool> value);
    partial void OnHasDoubleSunRoofChanged();
    partial void OnHasPowerWindowsChanging(System.Nullable<bool> value);
    partial void OnHasPowerWindowsChanged();
    partial void OnHasAutomaticTransmissionChanging(System.Nullable<bool> value);
    partial void OnHasAutomaticTransmissionChanged();
    #endregion
		
		public Car()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vin", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Vin
		{
			get
			{
				return this._Vin;
			}
			set
			{
				if ((this._Vin != value))
				{
					this.OnVinChanging(value);
					this.SendPropertyChanging();
					this._Vin = value;
					this.SendPropertyChanged("Vin");
					this.OnVinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LicensePlate", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LicensePlate
		{
			get
			{
				return this._LicensePlate;
			}
			set
			{
				if ((this._LicensePlate != value))
				{
					this.OnLicensePlateChanging(value);
					this.SendPropertyChanging();
					this._LicensePlate = value;
					this.SendPropertyChanged("LicensePlate");
					this.OnLicensePlateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Make", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Make
		{
			get
			{
				return this._Make;
			}
			set
			{
				if ((this._Make != value))
				{
					this.OnMakeChanging(value);
					this.SendPropertyChanging();
					this._Make = value;
					this.SendPropertyChanged("Make");
					this.OnMakeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Model
		{
			get
			{
				return this._Model;
			}
			set
			{
				if ((this._Model != value))
				{
					this.OnModelChanging(value);
					this.SendPropertyChanging();
					this._Model = value;
					this.SendPropertyChanged("Model");
					this.OnModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int NOT NULL")]
		public int Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfDoors", DbType="Int NOT NULL")]
		public int NumberOfDoors
		{
			get
			{
				return this._NumberOfDoors;
			}
			set
			{
				if ((this._NumberOfDoors != value))
				{
					this.OnNumberOfDoorsChanging(value);
					this.SendPropertyChanging();
					this._NumberOfDoors = value;
					this.SendPropertyChanged("NumberOfDoors");
					this.OnNumberOfDoorsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Odometer", DbType="Int NOT NULL")]
		public int Odometer
		{
			get
			{
				return this._Odometer;
			}
			set
			{
				if ((this._Odometer != value))
				{
					this.OnOdometerChanging(value);
					this.SendPropertyChanging();
					this._Odometer = value;
					this.SendPropertyChanged("Odometer");
					this.OnOdometerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxSpeed", DbType="Int NOT NULL")]
		public int MaxSpeed
		{
			get
			{
				return this._MaxSpeed;
			}
			set
			{
				if ((this._MaxSpeed != value))
				{
					this.OnMaxSpeedChanging(value);
					this.SendPropertyChanging();
					this._MaxSpeed = value;
					this.SendPropertyChanged("MaxSpeed");
					this.OnMaxSpeedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasAllWheelDrive", DbType="Bit NOT NULL")]
		public bool HasAllWheelDrive
		{
			get
			{
				return this._HasAllWheelDrive;
			}
			set
			{
				if ((this._HasAllWheelDrive != value))
				{
					this.OnHasAllWheelDriveChanging(value);
					this.SendPropertyChanging();
					this._HasAllWheelDrive = value;
					this.SendPropertyChanged("HasAllWheelDrive");
					this.OnHasAllWheelDriveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasPowerSteering", DbType="Bit NOT NULL")]
		public bool HasPowerSteering
		{
			get
			{
				return this._HasPowerSteering;
			}
			set
			{
				if ((this._HasPowerSteering != value))
				{
					this.OnHasPowerSteeringChanging(value);
					this.SendPropertyChanging();
					this._HasPowerSteering = value;
					this.SendPropertyChanged("HasPowerSteering");
					this.OnHasPowerSteeringChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasAirConditioning", DbType="Bit NOT NULL")]
		public bool HasAirConditioning
		{
			get
			{
				return this._HasAirConditioning;
			}
			set
			{
				if ((this._HasAirConditioning != value))
				{
					this.OnHasAirConditioningChanging(value);
					this.SendPropertyChanging();
					this._HasAirConditioning = value;
					this.SendPropertyChanged("HasAirConditioning");
					this.OnHasAirConditioningChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfAxles", DbType="Int")]
		public System.Nullable<int> NumberOfAxles
		{
			get
			{
				return this._NumberOfAxles;
			}
			set
			{
				if ((this._NumberOfAxles != value))
				{
					this.OnNumberOfAxlesChanging(value);
					this.SendPropertyChanging();
					this._NumberOfAxles = value;
					this.SendPropertyChanged("NumberOfAxles");
					this.OnNumberOfAxlesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpeedCount", DbType="Int")]
		public System.Nullable<int> SpeedCount
		{
			get
			{
				return this._SpeedCount;
			}
			set
			{
				if ((this._SpeedCount != value))
				{
					this.OnSpeedCountChanging(value);
					this.SendPropertyChanging();
					this._SpeedCount = value;
					this.SendPropertyChanged("SpeedCount");
					this.OnSpeedCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HighwayMilesPerGallon", DbType="Int")]
		public System.Nullable<int> HighwayMilesPerGallon
		{
			get
			{
				return this._HighwayMilesPerGallon;
			}
			set
			{
				if ((this._HighwayMilesPerGallon != value))
				{
					this.OnHighwayMilesPerGallonChanging(value);
					this.SendPropertyChanging();
					this._HighwayMilesPerGallon = value;
					this.SendPropertyChanged("HighwayMilesPerGallon");
					this.OnHighwayMilesPerGallonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityMilesPerGallon", DbType="Int")]
		public System.Nullable<int> CityMilesPerGallon
		{
			get
			{
				return this._CityMilesPerGallon;
			}
			set
			{
				if ((this._CityMilesPerGallon != value))
				{
					this.OnCityMilesPerGallonChanging(value);
					this.SendPropertyChanging();
					this._CityMilesPerGallon = value;
					this.SendPropertyChanged("CityMilesPerGallon");
					this.OnCityMilesPerGallonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasSunRoof", DbType="Bit")]
		public System.Nullable<bool> HasSunRoof
		{
			get
			{
				return this._HasSunRoof;
			}
			set
			{
				if ((this._HasSunRoof != value))
				{
					this.OnHasSunRoofChanging(value);
					this.SendPropertyChanging();
					this._HasSunRoof = value;
					this.SendPropertyChanged("HasSunRoof");
					this.OnHasSunRoofChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasDoubleSunRoof", DbType="Bit")]
		public System.Nullable<bool> HasDoubleSunRoof
		{
			get
			{
				return this._HasDoubleSunRoof;
			}
			set
			{
				if ((this._HasDoubleSunRoof != value))
				{
					this.OnHasDoubleSunRoofChanging(value);
					this.SendPropertyChanging();
					this._HasDoubleSunRoof = value;
					this.SendPropertyChanged("HasDoubleSunRoof");
					this.OnHasDoubleSunRoofChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasPowerWindows", DbType="Bit")]
		public System.Nullable<bool> HasPowerWindows
		{
			get
			{
				return this._HasPowerWindows;
			}
			set
			{
				if ((this._HasPowerWindows != value))
				{
					this.OnHasPowerWindowsChanging(value);
					this.SendPropertyChanging();
					this._HasPowerWindows = value;
					this.SendPropertyChanged("HasPowerWindows");
					this.OnHasPowerWindowsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasAutomaticTransmission", DbType="Bit")]
		public System.Nullable<bool> HasAutomaticTransmission
		{
			get
			{
				return this._HasAutomaticTransmission;
			}
			set
			{
				if ((this._HasAutomaticTransmission != value))
				{
					this.OnHasAutomaticTransmissionChanging(value);
					this.SendPropertyChanging();
					this._HasAutomaticTransmission = value;
					this.SendPropertyChanged("HasAutomaticTransmission");
					this.OnHasAutomaticTransmissionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
