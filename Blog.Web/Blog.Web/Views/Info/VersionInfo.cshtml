@{
    Layout = "~/Views/Shared/Global.cshtml";
    ViewBag.Title = "Version history";
}
<h1>Version History</h1>

<h2>1.0.0 (changeset 50)</h2>
<h3>Summary</h3>
<p>Initial release, single main page.</p>
<h3>Date</h3>
<p>2013-03-10 1:33PM CST</p>
<h3>Details</h3>
<ul>
    <li>Single static page to PoC the CI pipeline</li>
    <li>Build working through VisualStudio.com to Azure</li>
    <li>Domain name registrations properly linked to Azure</li>
</ul>

<h2>1.0.1 (changeset 55)</h2>
<h3>Summary</h3>
<p>Tweaking and checking CI pipeline</p>
<h3>Date</h3>
<p>2013-03-10 1:52PM CST</p>
<h3>Details</h3>
<ul>
    <li>CI pipeline apparently does <em>not</em> get run automatically on each checkin</li>
    <li>Writing up an actual brief intro page</li>
</ul>

<h2>1.0.2 (changeset 60)</h2>
<h3>Summary</h3>
<p>Setting up routes and a few pages</p>
<h3>Date</h3>
<p>2013-03-10</p>
<h3>Details</h3>
<ul>
    <li>Split up into a main, about, and version page</li>
    <li>Adding a Global master Razor page</li>
    <li>Creating some routes for the new pages</li>
</ul>

<h2>1.0.3 (changeset 61)</h2>
<h3>Summary</h3>
<p>Adding CSS references</p>
<h3>Date</h3>
<p>2013-03-10</p>
<h3>Details</h3>
<ul>
    <li>Added <a href="https://code.google.com/p/google-code-prettify/">Prettify.js</a> and a VS-themification update thanks to <a href="http://stackoverflow.com/questions/1667097/how-to-get-google-prettify-to-render-more-like-visual-studio">this SO answer</a></li>
    <li>Added Reset.css and a Global.css</li>
    <li>Testing out the new hotness with a FizzBuzz sample that hopefully actually compiles and runs correctly</li>
</ul>

<h2>1.0.4 (changeset 66)</h2>
<h3>Summary</h3>
<p>Trello link, titles</p>
<h3>Date</h3>
<p>2013-03-13</p>
<h3>Details</h3>
<ul>
    <li>Added a link to the Trello board on the global footer</li>
    <li>Fixed titles in all pages to actually work</li>
</ul>

<h2>1.0.5 (changeset 71, unreleased)</h2>
<h3>Summary</h3>
<p>DB migration framework</p>
<h3>Date</h3>
<p>2013-03-30</p>
<h3>Details</h3>
<ul>
    <li>Created a barebones-simple DB migration framework so that I can actually be data-driven and seamlessly push builds</li>
</ul>

<h2>1.0.6 (changeset 72, unreleased)</h2>
<h3>Summary</h3>
<p>Data-Driven Views</p>
<h3>Date</h3>
<p>2013-04-10</p>
<h3>Details</h3>
<ul>
    <li>Moved all of the post information out of the Views and into a Controller.*</li>
    <li>Migrated from the default Home {Controller, View, Model namespace} into Blog</li>
    <li>Updated routing table to point to the new Blog entities</li>
</ul>
<p class="subtitle">*This is for the purpose of making the application properly data-driven from the top down.</p>
<p class="subtitle"><em>Why top-down? I thought you were supposed to build bottom-up?</em></p>
<p class="subtitle">In general development, I'd say that's probably true. But my goal here is to squeeze as much deliverability out of as tiny time increments as possible, and to be able to continuously deliver. Thus, fueling the front end is the greatest good in my current context.</p>


<h2>1.0.7 (changeset 78, unreleased)</h2>
<h3>Summary</h3>
<p>Dependency Injection with Castle Windsor</p>
<h3>Date</h3>
<p>2013-04-11</p>
<h3>Details</h3>
<ul>
    <li>Chose to go with <a href="http://docs.castleproject.org/Windsor.MainPage.ashx" target="_blank">Castle Windsor</a> for <a href="http://en.wikipedia.org/wiki/Dependency_injection" target="_blank">Dependency Injection</a></li>
    <li>Maybe I'll do a brief post on DI and why it's helpful. Even though there are a thousand other bits of documentation on it.</li>
</ul>

<h2>1.0.8 (changeset 83)</h2>
<h3>Summary</h3>
<p>Preparation for Database</p>
<h3>Date</h3>
<p>2013-04-12</p>
<h3>Details</h3>
<ul>
    <li>Preparing for making the site data-driven</li>
    <li>Creating Service/Model/Data components to handle the layers between the DB and front end</li>
    <li>Doing some testing to see how magically Azure handles connection string replacement</li>
    <li>Created a common PaginatedList&lt;T&gt; to handle paged results</li>
</ul>

<h2>1.0.9 (changeset 105)</h2>
<h3>Summary</h3>
<p>CI Working Again</p>
<h3>Date</h3>
<p>2013-04-12</p>
<h3>Details</h3>
<ul>
    <li>CI busted when I added a project below its working directory. Glad that only took an hour to figure out...</li>
    <li>It turns out that Azure is pretty smart about connection string replacement, so that's nice and easy</li>
    <li>I've now worked out most of the kinks in deploying a DB-driven site (except for the mundane detail of an actual database)</li>
</ul>

<h2>1.0.10 (changeset 111)</h2>
<h3>Summary</h3>
<p>Final preparations for database hookup</p>
<h3>Date</h3>
<p>2013-04-13</p>
<h3>Details</h3>
<ul>
    <li>Registering all components with Windsor down to the data context</li>
    <li>Registering the DB syncer in all appropriate places</li>
    <li>Minor DB sync refactor to take in a wrapped Assembly so that it can be DI'd</li>
    <li>Inherited set of Windsor installers so that each layer can wire up only what it needs, blissfully unaware of the others (future blog post?)</li>
</ul>

<h2>1.0.11 (changeset 112)</h2>
<h3>Summary</h3>
<p>Data-driven posts</p>
<h3>Date</h3>
<p>2013-04-20</p>
<h3>Details</h3>
<ul>
    <li>Creating DB schema for simple Blogs and Posts</li>
    <li>Pre-populating DB with three existing posts</li>
    <li>Pulled in <a href="https://code.google.com/p/markdownsharp/" target="_blank">markdownsharp</a> so that posts can be written in markdown and converted at runtime</li>
    <li>Had to fix up Views to allow <a href="https://code.google.com/p/google-code-prettify/" target="_blank">Prettify</a> and <a href="https://code.google.com/p/markdownsharp/" target="_blank">markdownsharp</a> to play nicely</li>
    <li>Pulled in jQuery because I had to write some javascript to support the previous point</li>
    <li>Did some clever ViewData passing to allow all Views to have a properly-initialized instance of Markdown instantiated by the BaseController (could get DI'd eventually, I suppose)</li>
</ul>
<h2>1.0.12 (changeset 122)</h2>
<h3>Summary</h3>
<p>Initial OpenID</p>
<h3>Date</h3>
<p>2013-04-30</p>
<h3>Details</h3>
<ul>
    <li>Pulling in OpenID nuget repos</li>
    <li>Grabbing a few large, initial OpenID identity providers</li>
    <li>Initial Controller scaffold for Authentication</li>
</ul>

<h2>1.0.13 (changeset 127)</h2>
<h3>Summary</h3>
<p>OpenID Post and Accept</p>
<h3>Date</h3>
<p>2013-05-01</p>
<h3>Details</h3>
<ul>
    <li>Javascripting up a <code>POST</code> for the identity provider selection page</li>
    <li>Tweaking the requested/required details from the idenity provider</li>
</ul>

<h2>1.0.14 (changeset 128)</h2>
<h3>Summary</h3>
<p>Users in Database</p>
<h3>Date</h3>
<p>2013-05-01</p>
<h3>Details</h3>
<ul>
    <li>Added Identity Providers, Users and Permissions tables to database</li>
    <li>Yet to be used by anything, but they're ready for the next step</li>
</ul>
@* Template:

<h2>1.x.x (changeset x)</h2>
<h3>Summary</h3>
<p>{{Summary}}</p>
<h3>Date</h3>
<p>{{Date}}</p>
<h3>Details</h3>
<ul>
    <li>{{Details}}</li>
</ul>

*@